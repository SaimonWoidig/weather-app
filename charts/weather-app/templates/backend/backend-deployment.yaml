apiVersion: apps/v1
kind: Deployment
metadata:
  name: weather-app-backend
spec:
  selector:
    matchLabels:
      app: weather-app-backend
  template:
    metadata:
      labels:
        app: weather-app-backend
    spec:
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      volumes:
        - name: weather-app-backend-config
          secret:
            secretName: weather-app-backend-config
        - name: weather-app-backend-data
          persistentVolumeClaim:
            claimName: weather-app-backend-data
      containers:
        - name: weather-app-backend
          image: "{{ .Values.backend.image.name }}:{{ .Values.backend.image.tag }}"
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: weather-app-backend-config
              mountPath: /usr/local/weather-app/config
              readOnly: true
            - name: weather-app-backend-data
              mountPath: /usr/local/weather-app/data
          ports:
            - name: http
              containerPort: 8080
          startupProbe:
            httpGet:
              path: /actuator/health
              port: http
            failureThreshold: 6
            periodSeconds: 10
            initialDelaySeconds: 10
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: http
            failureThreshold: 3
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: http
            failureThreshold: 3
            periodSeconds: 10
          resources:
          {{- toYaml .Values.backend.resources | nindent 12 }}
