name: Deploy to Production
on:
  release:
    types:
      - created
permissions:
  packages: write
jobs:
  build-backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    steps:
      - uses: actions/checkout@v4
      - name: setup JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
          cache: gradle
          cache-dependency-path: backend/build.gradle.kts
      - name: setup Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          github-token: "${{secrets.GITHUB_TOKEN}}"
          cache-disabled: true
      - name: build jar
        run: sh ./gradlew -x test bootJar
      - name: rename jar
        run: mv build/libs/*.jar build/libs/weather-app-backend.jar
      - name: upload jar as artifact
        uses: actions/upload-artifact@v4
        with:
          name: backend
          path: backend/build/libs/weather-app-backend.jar
          retention-days: 1
          if-no-files-found: error
  dockerize-backend:
    runs-on: ubuntu-latest
    needs: [build-backend]
    defaults:
      run:
        working-directory: backend
    steps:
      - uses: actions/checkout@v4
      - name: download jar
        uses: actions/download-artifact@v4
        with:
          name: backend
          path: backend/build/libs/weather-app-backend.jar
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io/saimonwoidig/weather-app
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/build-push-action@v5
        with:
          tags: ghcr.io/saimonwoidig/weather-app/backend:${{ github.event.release.tag_name }}
          push: true
          context: backend
          file: backend/docker/Dockerfile
  build-frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
      - uses: actions/checkout@v4
      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version-file: frontend/package.json
      - name: setup pnpm
        uses: pnpm/action-setup@v3
        with:
          package_json_file: frontend/package.json
          run_install: false
      - name: install deps
        run: pnpm install --frozen-lockfile
      - name: build
        run: pnpm run build
      - name: upload output as artifact
        uses: actions/upload-artifact@v4
        with:
          name: frontend
          path: frontend/.output
          retention-days: 1
          if-no-files-found: error
  dockerize-frontend:
    runs-on: ubuntu-latest
    needs: [build-frontend]
    defaults:
      run:
        working-directory: backend
    steps:
      - uses: actions/checkout@v4
      - name: download frontend output
        uses: actions/download-artifact@v4
        with:
          name: frontend
          path: frontend/.output
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io/saimonwoidig/weather-app
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/build-push-action@v5
        with:
          tags: ghcr.io/saimonwoidig/weather-app/frontend:${{ github.event.release.tag_name }}
          push: true
          context: frontend
          file: frontend/docker/Dockerfile
  deploy:
    runs-on: ubuntu-latest
    needs: [dockerize-backend, dockerize-frontend]
    environment:
      name: Production
      url: https://weatherapp.woidignet.cz
    defaults:
      run:
        working-directory: charts
    steps:
      - uses: actions/checkout@v4
      - uses: azure/setup-helm@v4.2.0
      - name: Decode kubeconfig secret and save to file
        run: "echo ${{secrets.KUBECONFIG_B64}} | base64 -d > kubeconfig.yaml && chmod 600 kubeconfig.yaml"
      - name: Deploy via helm
        run: helm upgrade -i -n weather-app --create-namespace --atomic --set backend.image.tag=${{github.event.release.tag_name}} --set frontend.image.tag=${{github.event.release.tag_name}} --set backend.config.jwt.secret=${{secrets.JWT_SECRET}} weather-app ./weather-app
        env:
          KUBECONFIG: ./kubeconfig.yaml
